### Checklist for My C++ Object-Oriented Programming Project (Phase 1)

1. [X] Class Design:
   - [X] I've created classes for event location (e.g., EventLocation), event (e.g., Event), and tickets (e.g., Ticket).


2. [ X] Attributes for Classes:
   - [ ] In each class, I've defined attributes like the event name, date, time, maximum seats, rows, zones, and seat codes.

EventLocation Class:

Attributes:
Statically defined array to store the seat availability (e.g., int seats[ROWS][SEATS_PER_ROW]).
	
Generic Methods:
Calculate the percentage of seats filled.
Display the available seats in a specific row.

Event Class:

Overloaded Operators:
Overload the >> operator 


Ticket Class:

Overloaded Operators:
Overload the equality operator (==).



indexing operator []
negation operator !
relational operators (<.>,=<,>=,==)


3. [X] Data Members:
   - [ ] I've placed these attributes in the private section of each class.

4. [X] Accessor Methods:
   - [ ] I've implemented accessor methods (getters) for each attribute.

5. [X] Validation in Setters:
   - [ ] I've created setter methods for attributes, and they include input validation.

6. [X] Static and Constant Members:
   - [ ] Within each class, I've included at least one static and one constant field relevant to the class.

7. [X] Dynamic Vectors:
   - [ ] I've used dynamically allocated vectors of characters and numeric vectors in my classes.

8. [x] Static Method:
   - [ ] I've included a static.

9. [X] Generic Methods:
   - [ ] I've implemented at least two generic methods (not constructors or accessors) in each class for various processing.

10. [X] Constructors:
    - [ ] I've created both default constructors and constructors with parameters for each class.

11. [X] "Rule of 3":
    - [ ] If any of the classes have pointer members, I've ensured they follow the "rule of 3" (copy constructor, copy assignment operator, destructor).

12. [X] Overload Operators:
    - [ ] I've overloaded the input (>>) and output (<<) operators for each class.

13. [X] Additional Overloaded Operators:
    - [ ] I've overloaded at least two other operators for each class from the provided list (e.g., indexing operator, arithmetic operators, etc.).

14. [X] Class Header and Implementation:
    - [ ] Each class is implemented in its own header and/or cpp file.

15. [X] Main Function:
    - [ ] I've created the main function in a separate cpp file.

16. [X] Implement Functionality:
    - [ ] I've implemented basic functionality to create, read, and manipulate data for the event location, event, and tickets.

17. [ ] Error Handling:
    - [ ] My application handles various input types and displays error messages for invalid input values.

18. [X] Git Repository:
    - [X] I've set up a Git repository for my project.
    - [X] I've made multiple commits after each class implementation/update.
    - [X] Each commit includes a short message explaining the changes.

19. [ ] Testing:
    - [ ] I've tested my classes and functions with different scenarios to ensure they work as expected.

20. [X] Documentation:
    - [ ] I've added comments and documentation to my code to explain the purpose and usage of classes and functions.
